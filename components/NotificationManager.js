import PushNotification from 'react-native-push-notification'

class NotificationManager {
    sendNotification(id, title, message) {
        id = toString(id)

        PushNotification.localNotification({
            /* Android Only Properties */
            id: id, // (optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID
            userInfo: { id: id },
            autoCancel: true, // (optional) default: true
            largeIcon: "ic_launcher", // (optional) default: "ic_launcher"
            smallIcon: "ic_launcher", // (optional) default: "ic_notification" with fallback for "ic_launcher"
            color: "red", // (optional) default: system default
            vibrate: true, // (optional) default: true
            vibration: 1000, // vibration length in milliseconds, ignored if vibrate=false, default: 1000
            tag: 'some_tag', // (optional) add tag to message
            group: "group", // (optional) add group to message
            ongoing: false, // (optional) set whether this is an "ongoing" notification
            priority: "high", // (optional) set notification priority, default: high
            visibility: "private", // (optional) set notification visibility, default: private
            importance: "high", // (optional) set notification importance, default: high
            title: title, // (optional)
            message: message, // (required)
            playSound: false, // (optional) default: true
            soundName: 'default', // (optional) Sound to play when the notification is shown. Value of 'default' plays the default sound. It can be set to a custom sound such as 'android.resource://com.xyz/raw/my_sound'. It will look for the 'my_sound' audio file in 'res/raw' directory and play it. default: 'default' (default sound is played)
            actions: '["OK]'  // (Android only) See the doc for notification actions to know more
        });
    }
    scheduleNotification(id, title, message, date) {
        id = String(id)
        
        PushNotification.localNotificationSchedule({
            /* Android Only Properties */
            id: id, // (optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID
            userInfo: { id: id },
            autoCancel: true, // (optional) default: true
            largeIcon: "ic_launcher", // (optional) default: "ic_launcher"
            smallIcon: "ic_launcher", // (optional) default: "ic_notification" with fallback for "ic_launcher"
            color: "red", // (optional) default: system default
            vibrate: true, // (optional) default: true
            vibration: 1000, // vibration length in milliseconds, ignored if vibrate=false, default: 1000
            tag: 'some_tag', // (optional) add tag to message
            group: "group", // (optional) add group to message
            ongoing: false, // (optional) set whether this is an "ongoing" notification
            priority: "high", // (optional) set notification priority, default: high
            visibility: "private", // (optional) set notification visibility, default: private
            importance: "high", // (optional) set notification importance, default: high
            title: title, // (optional)
            message: message, // (required)
            playSound: false, // (optional) default: true
            soundName: 'default', // (optional) Sound to play when the notification is shown. Value of 'default' plays the default sound. It can be set to a custom sound such as 'android.resource://com.xyz/raw/my_sound'. It will look for the 'my_sound' audio file in 'res/raw' directory and play it. default: 'default' (default sound is played)
            actions: '["OK]',  // (Android only) See the doc for notification actions to know more
            date: date
        });
    }
    cancelNotification(id) {
        id = String(id)

        PushNotification.cancelLocalNotifications(
            {
                id: id
            }
        )
    }
}

export default new NotificationManager;